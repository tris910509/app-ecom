<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Halaman Produk</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="container mt-4">
        <h2>Halaman Produk</h2>
        
        <!-- Formulir Input Produk -->
        <div class="mt-4">
            <h4>Tambah/Edit Produk</h4>
            <form id="productForm" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="productName" class="form-label">Nama Produk</label>
                    <input type="text" id="productName" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="productPrice" class="form-label">Harga</label>
                    <input type="number" id="productPrice" class="form-control" required>
                </div>
                <div class="mb-3">
                    <label for="productCategory" class="form-label">Kategori</label>
                    <select id="productCategory" class="form-select" required>
                        <!-- Kategori akan dimuat secara dinamis -->
                    </select>
                </div>
                <div class="mb-3">
                    <label for="productStatus" class="form-label">Status</label>
                    <select id="productStatus" class="form-select" required>
                        <option value="aktif">Aktif</option>
                        <option value="non-aktif">Non-Aktif</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="productImage" class="form-label">Foto Produk</label>
                    <input type="file" id="productImage" class="form-control" accept="image/*">
                </div>
                <button type="submit" class="btn btn-primary">Simpan Produk</button>
            </form>
        </div>

        <!-- Tabel Daftar Produk -->
        <div class="mt-5">
            <h4>Daftar Produk</h4>
            <table class="table table-bordered table-striped">
                <thead class="table-primary">
                    <tr>
                        <th>No</th>
                        <th>ID Produk</th>
                        <th>Nama</th>
                        <th>Harga</th>
                        <th>Kategori</th>
                        <th>Status</th>
                        <th>Foto</th>
                        <th>Aksi</th>
                    </tr>
                </thead>
                <tbody id="productTableBody">
                    <!-- Daftar produk akan dimuat di sini -->
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Data kategori dan produk yang disimpan di localStorage (untuk demo)
        const categories = JSON.parse(localStorage.getItem("categories")) || [];
        let products = JSON.parse(localStorage.getItem("products")) || [];

        // Memuat daftar kategori ke dalam dropdown
        function loadCategories() {
            const categorySelect = document.getElementById('productCategory');
            categorySelect.innerHTML = ''; // Kosongkan dropdown terlebih dahulu
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.id;
                option.innerText = category.name;
                categorySelect.appendChild(option);
            });
        }

        // Fungsi untuk menghasilkan ID unik menggunakan UUID
        function generateUniqueId() {
            return 'xxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // Memuat daftar produk
        function loadProducts() {
            const tableBody = document.getElementById('productTableBody');
            tableBody.innerHTML = ''; // Kosongkan tabel terlebih dahulu

            products.forEach((product, index) => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${product.id}</td>
                    <td>${product.name}</td>
                    <td>${product.price}</td>
                    <td>${product.category}</td>
                    <td>${product.status}</td>
                    <td><img src="${product.image}" alt="Image" width="50"></td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editProduct('${product.id}')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteProduct('${product.id}')">Hapus</button>
                    </td>
                `;
                tableBody.appendChild(tr);
            });
        }

        // Menangani pengiriman formulir
        document.getElementById('productForm').addEventListener('submit', function(event) {
            event.preventDefault();

            const name = document.getElementById('productName').value;
            const price = document.getElementById('productPrice').value;
            const category = document.getElementById('productCategory').value;
            const status = document.getElementById('productStatus').value;
            const imageFile = document.getElementById('productImage').files[0];

            // Memeriksa jika sedang dalam mode edit
            const editingId = document.getElementById('productForm').dataset.editingId;

            // Menangani gambar produk
            const imageUrl = imageFile ? URL.createObjectURL(imageFile) : '';

            if (editingId) {
                // Edit produk
                const productIndex = products.findIndex(p => p.id === editingId);
                products[productIndex] = {
                    id: editingId,
                    name: name,
                    price: price,
                    category: category,
                    status: status,
                    image: imageUrl
                };
                localStorage.setItem("products", JSON.stringify(products));
                Swal.fire("Sukses", "Produk berhasil diubah!", "success");
            } else {
                // Tambah produk baru
                const newProduct = {
                    id: generateUniqueId(), // ID unik untuk produk
                    name: name,
                    price: price,
                    category: category,
                    status: status,
                    image: imageUrl
                };

                products.push(newProduct);
                localStorage.setItem("products", JSON.stringify(products));
                Swal.fire("Sukses", "Produk baru berhasil ditambahkan!", "success");
            }

            // Reset formulir dan hapus data edit
            document.getElementById('productForm').reset();
            document.getElementById('productForm').removeAttribute('data-editing-id');
            loadProducts();
        });

        // Fungsi untuk mengedit produk
        function editProduct(productId) {
            const product = products.find(p => p.id === productId);
            document.getElementById('productName').value = product.name;
            document.getElementById('productPrice').value = product.price;
            document.getElementById('productCategory').value = product.category;
            document.getElementById('productStatus').value = product.status;

            // Set ID untuk menunjukkan bahwa ini adalah mode edit
            document.getElementById('productForm').dataset.editingId = product.id;
        }

        // Fungsi untuk menghapus produk
        function deleteProduct(productId) {
            products = products.filter(p => p.id !== productId);
            localStorage.setItem("products", JSON.stringify(products));
            Swal.fire("Sukses", "Produk berhasil dihapus!", "success");
            loadProducts();
        }

        // Memuat kategori dan produk saat halaman dimuat
        loadCategories();
        loadProducts();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
